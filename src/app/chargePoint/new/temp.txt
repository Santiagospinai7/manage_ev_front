"use client";
import React, { useState } from 'react';

// Imagen de decoración (puedes cambiar la URL)
const DECORATION_IMAGE = 'https://www.flooxpower.com/wp-content/uploads/2022/06/Floox-Ilus-07.png'; // Reemplaza con la URL de la imagen de decoración

const ChargePointForm = () => {
  const [formData, setFormData] = useState({
    name: '',
    company: '',
    latitude: '',
    longitude: '',
    status: 'habilitada', // Valor predeterminado
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({
      ...formData,
      [name]: value,
    });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    // Aquí puedes enviar formData a tu API o realizar la acción necesaria
    console.log('Formulario enviado:', formData);
  };

  return (
    <div className="container mx-auto mt-10">
      <br></br>
      <div className="flex flex-col sm:flex-row">
        <div className="w-full sm:w-1/2 p-4 border rounded-lg shadow-lg mb-4 sm:mb-0">
          <form onSubmit={handleSubmit}>
            <div className="mb-4">
              <label htmlFor="name" className="block text-gray-600 text-sm font-medium mb-2">
                Nombre del punto de carga:
              </label>
              <input
                type="text"
                id="name"
                name="name"
                value={formData.name}
                onChange={handleChange}
                className="w-full px-3 py-2 border rounded-lg focus:outline-none focus:border-blue-500"
                placeholder="Nombre del punto de carga"
                required
              />
            </div>
            <div className="mb-4">
              <label htmlFor="company" className="block text-gray-600 text-sm font-medium mb-2">
                Compañía:
              </label>
              <input
                type="text"
                id="company"
                name="company"
                value={formData.company}
                onChange={handleChange}
                className="w-full px-3 py-2 border rounded-lg focus:outline-none focus:border-blue-500"
                placeholder="Compañía"
                required
              />
            </div>
            <div className="mb-4">
              <label htmlFor="latitude" className="block text-gray-600 text-sm font-medium mb-2">
                Latitud:
              </label>
              <input
                type="text"
                id="latitude"
                name="latitude"
                value={formData.latitude}
                onChange={handleChange}
                className="w-full px-3 py-2 border rounded-lg focus:outline-none focus:border-blue-500"
                placeholder="Latitud"
                required
              />
            </div>
            <div className="mb-4">
              <label htmlFor="longitude" className="block text-gray-600 text-sm font-medium mb-2">
                Longitud:
              </label>
              <input
                type="text"
                id="longitude"
                name="longitude"
                value={formData.longitude}
                onChange={handleChange}
                className="w-full px-3 py-2 border rounded-lg focus:outline-none focus:border-blue-500"
                placeholder="Longitud"
                required
              />
            </div>
            <div className="mb-4">
              <label htmlFor="status" className="block text-gray-600 text-sm font-medium mb-2">
                Estado:
              </label>
              <select
                id="status"
                name="status"
                value={formData.status}
                onChange={handleChange}
                className="w-full px-3 py-2 border rounded-lg focus:outline-none focus:border-blue-500"
                required
              >
                <option value="habilitada">Habilitada</option>
                <option value="desconectada">Desconectada</option>
              </select>
            </div>
            <button
              type="submit"
              className="w-full bg-blue-500 text-white py-2 px-4 rounded-lg hover:bg-blue-600 transition duration-300"
            >
              Enviar
            </button>
          </form>
        </div>
        <div className="w-full sm:w-1/2 p-4">
          <img
            src={DECORATION_IMAGE}
            alt="Decoración"
            className="w-full h-auto mx-auto"
          />
        </div>
      </div>
    </div>
  );
};

export default ChargePointForm;
